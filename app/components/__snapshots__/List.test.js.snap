// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/List it should render correctly/ 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <List
    pokemon={
      Array [
        Object {
          "pokemon": Object {
            "name": "test name",
          },
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "pokemon": Array [
        Object {
          "pokemon": Object {
            "name": "test name",
          },
        },
      ],
    },
    "ref": null,
    "rendered": Object {
      "instance": <div>
        <h1>
          Ability
        </h1>
        <ul>
          <li>
            test name
          </li>
        </ul>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Ability
          </h1>,
          <ul>
            <li>
              test name
            </li>
          </ul>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <h1>
            Ability
          </h1>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Ability",
          },
          "ref": null,
          "rendered": Array [
            "Ability",
          ],
          "type": "h1",
        },
        Object {
          "instance": <ul>
            <li>
              test name
            </li>
          </ul>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li>
                test name
              </li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <li>
                test name
              </li>,
              "key": "test name",
              "nodeType": "host",
              "props": Object {
                "children": "test name",
              },
              "ref": null,
              "rendered": Array [
                "test name",
              ],
              "type": "li",
            },
          ],
          "type": "ul",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "pokemon": Array [
          Object {
            "pokemon": Object {
              "name": "test name",
            },
          },
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": <div>
          <h1>
            Ability
          </h1>
          <ul>
            <li>
              test name
            </li>
          </ul>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              Ability
            </h1>,
            <ul>
              <li>
                test name
              </li>
            </ul>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <h1>
              Ability
            </h1>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Ability",
            },
            "ref": null,
            "rendered": Array [
              "Ability",
            ],
            "type": "h1",
          },
          Object {
            "instance": <ul>
              <li>
                test name
              </li>
            </ul>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <li>
                  test name
                </li>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <li>
                  test name
                </li>,
                "key": "test name",
                "nodeType": "host",
                "props": Object {
                  "children": "test name",
                },
                "ref": null,
                "rendered": Array [
                  "test name",
                ],
                "type": "li",
              },
            ],
            "type": "ul",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
